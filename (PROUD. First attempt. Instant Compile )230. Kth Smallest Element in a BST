/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int kthSmallest(TreeNode root, int k) {
        
        if(root == null){
            return 0;
        }
        PriorityQueue<Integer> pq = new PriorityQueue<>((a,b) -> a-b);
        
        allElements(root,pq);
        
        int i=0;
        while(i<k-1){
            pq.poll();
            i++;
        }
        return pq.poll();
    }
    
    public void allElements(TreeNode root, PriorityQueue<Integer> pq){
        
        pq.add(root.val);
        
        if(root.left != null){
            allElements(root.left,pq);
        }
        if(root.right != null){
            allElements(root.right,pq);
        }
        
    }
}

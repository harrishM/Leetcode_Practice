/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        
        List<String> output = new ArrayList<>();
        
        
        if(root == null){
            return output;
        }
        
        dfs(root,"",0,output);

        
        return output;
    }
    
    public void dfs(TreeNode root, String path,int sum,List<String> output){
        
        path += root.val;
        sum += root.val;
        
        if(root.left == null && root.right ==null){
            output.add(path);
            System.out.println("Path: "+path+"  SUM: "+sum);
            return;
        }
        if(root.left != null){
            dfs(root.left,path+"->",sum,output);
        }
        if(root.right != null){
            dfs(root.right,path+"->",sum,output);
        }
        
        
    }
    
  
        
        
    }
